// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: chat-notification/chat.proto

package chatpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderId      string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ReceiverId    string                 `protobuf:"bytes,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsRead        bool                   `protobuf:"varint,6,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_chat_notification_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Message) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsRead        bool                   `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_chat_notification_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notification) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Notification) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Notification) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ReceiverId    string                 `protobuf:"bytes,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_chat_notification_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendMessageRequest) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_chat_notification_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId_1      string                 `protobuf:"bytes,1,opt,name=user_id_1,json=userId1,proto3" json:"user_id_1,omitempty"`
	UserId_2      string                 `protobuf:"bytes,2,opt,name=user_id_2,json=userId2,proto3" json:"user_id_2,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationRequest) Reset() {
	*x = GetConversationRequest{}
	mi := &file_chat_notification_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationRequest) ProtoMessage() {}

func (x *GetConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationRequest.ProtoReflect.Descriptor instead.
func (*GetConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GetConversationRequest) GetUserId_1() string {
	if x != nil {
		return x.UserId_1
	}
	return ""
}

func (x *GetConversationRequest) GetUserId_2() string {
	if x != nil {
		return x.UserId_2
	}
	return ""
}

func (x *GetConversationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetConversationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationResponse) Reset() {
	*x = GetConversationResponse{}
	mi := &file_chat_notification_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationResponse) ProtoMessage() {}

func (x *GetConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationResponse.ProtoReflect.Descriptor instead.
func (*GetConversationResponse) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{5}
}

func (x *GetConversationResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetConversationResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetUserChatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserChatsRequest) Reset() {
	*x = GetUserChatsRequest{}
	mi := &file_chat_notification_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserChatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChatsRequest) ProtoMessage() {}

func (x *GetUserChatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChatsRequest.ProtoReflect.Descriptor instead.
func (*GetUserChatsRequest) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserChatsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserChatsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RecentMessages []*Message             `protobuf:"bytes,1,rep,name=recent_messages,json=recentMessages,proto3" json:"recent_messages,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUserChatsResponse) Reset() {
	*x = GetUserChatsResponse{}
	mi := &file_chat_notification_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserChatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChatsResponse) ProtoMessage() {}

func (x *GetUserChatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChatsResponse.ProtoReflect.Descriptor instead.
func (*GetUserChatsResponse) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserChatsResponse) GetRecentMessages() []*Message {
	if x != nil {
		return x.RecentMessages
	}
	return nil
}

type SendNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_chat_notification_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{8}
}

func (x *SendNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendNotificationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendNotificationRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendNotificationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SendNotificationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_chat_notification_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{9}
}

func (x *SendNotificationResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *SendNotificationResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetUserNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserNotificationsRequest) Reset() {
	*x = GetUserNotificationsRequest{}
	mi := &file_chat_notification_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNotificationsRequest) ProtoMessage() {}

func (x *GetUserNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetUserNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserNotificationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserNotificationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUserNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserNotificationsResponse) Reset() {
	*x = GetUserNotificationsResponse{}
	mi := &file_chat_notification_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNotificationsResponse) ProtoMessage() {}

func (x *GetUserNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetUserNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetUserNotificationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type MarkNotificationReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkNotificationReadRequest) Reset() {
	*x = MarkNotificationReadRequest{}
	mi := &file_chat_notification_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationReadRequest) ProtoMessage() {}

func (x *MarkNotificationReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationReadRequest) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{12}
}

func (x *MarkNotificationReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type MarkNotificationReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkNotificationReadResponse) Reset() {
	*x = MarkNotificationReadResponse{}
	mi := &file_chat_notification_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationReadResponse) ProtoMessage() {}

func (x *MarkNotificationReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_notification_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationReadResponse.ProtoReflect.Descriptor instead.
func (*MarkNotificationReadResponse) Descriptor() ([]byte, []int) {
	return file_chat_notification_chat_proto_rawDescGZIP(), []int{13}
}

func (x *MarkNotificationReadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_chat_notification_chat_proto protoreflect.FileDescriptor

const file_chat_notification_chat_proto_rawDesc = "" +
	"\n" +
	"\x1cchat-notification/chat.proto\x12\x06chatpb\"\xa8\x01\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vreceiver_id\x18\x03 \x01(\tR\n" +
	"receiverId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12\x17\n" +
	"\ais_read\x18\x06 \x01(\bR\x06isRead\"\xb2\x01\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12\x17\n" +
	"\ais_read\x18\a \x01(\bR\x06isRead\"l\n" +
	"\x12SendMessageRequest\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vreceiver_id\x18\x02 \x01(\tR\n" +
	"receiverId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"L\n" +
	"\x13SendMessageResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"z\n" +
	"\x16GetConversationRequest\x12\x1a\n" +
	"\tuser_id_1\x18\x01 \x01(\tR\auserId1\x12\x1a\n" +
	"\tuser_id_2\x18\x02 \x01(\tR\auserId2\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"g\n" +
	"\x17GetConversationResponse\x12+\n" +
	"\bmessages\x18\x01 \x03(\v2\x0f.chatpb.MessageR\bmessages\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\".\n" +
	"\x13GetUserChatsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"P\n" +
	"\x14GetUserChatsResponse\x128\n" +
	"\x0frecent_messages\x18\x01 \x03(\v2\x0f.chatpb.MessageR\x0erecentMessages\"v\n" +
	"\x17SendNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"[\n" +
	"\x18SendNotificationResponse\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"`\n" +
	"\x1bGetUserNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"{\n" +
	"\x1cGetUserNotificationsResponse\x12:\n" +
	"\rnotifications\x18\x01 \x03(\v2\x14.chatpb.NotificationR\rnotifications\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"F\n" +
	"\x1bMarkNotificationReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\"6\n" +
	"\x1cMarkNotificationReadResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\x9d\x04\n" +
	"\vChatService\x12H\n" +
	"\vSendMessage\x12\x1a.chatpb.SendMessageRequest\x1a\x1b.chatpb.SendMessageResponse\"\x00\x12T\n" +
	"\x0fGetConversation\x12\x1e.chatpb.GetConversationRequest\x1a\x1f.chatpb.GetConversationResponse\"\x00\x12K\n" +
	"\fGetUserChats\x12\x1b.chatpb.GetUserChatsRequest\x1a\x1c.chatpb.GetUserChatsResponse\"\x00\x12W\n" +
	"\x10SendNotification\x12\x1f.chatpb.SendNotificationRequest\x1a .chatpb.SendNotificationResponse\"\x00\x12c\n" +
	"\x14GetUserNotifications\x12#.chatpb.GetUserNotificationsRequest\x1a$.chatpb.GetUserNotificationsResponse\"\x00\x12c\n" +
	"\x14MarkNotificationRead\x12#.chatpb.MarkNotificationReadRequest\x1a$.chatpb.MarkNotificationReadResponse\"\x00B!Z\x1fgithub.com/skillsync/gen/chatpbb\x06proto3"

var (
	file_chat_notification_chat_proto_rawDescOnce sync.Once
	file_chat_notification_chat_proto_rawDescData []byte
)

func file_chat_notification_chat_proto_rawDescGZIP() []byte {
	file_chat_notification_chat_proto_rawDescOnce.Do(func() {
		file_chat_notification_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_notification_chat_proto_rawDesc), len(file_chat_notification_chat_proto_rawDesc)))
	})
	return file_chat_notification_chat_proto_rawDescData
}

var file_chat_notification_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_chat_notification_chat_proto_goTypes = []any{
	(*Message)(nil),                      // 0: chatpb.Message
	(*Notification)(nil),                 // 1: chatpb.Notification
	(*SendMessageRequest)(nil),           // 2: chatpb.SendMessageRequest
	(*SendMessageResponse)(nil),          // 3: chatpb.SendMessageResponse
	(*GetConversationRequest)(nil),       // 4: chatpb.GetConversationRequest
	(*GetConversationResponse)(nil),      // 5: chatpb.GetConversationResponse
	(*GetUserChatsRequest)(nil),          // 6: chatpb.GetUserChatsRequest
	(*GetUserChatsResponse)(nil),         // 7: chatpb.GetUserChatsResponse
	(*SendNotificationRequest)(nil),      // 8: chatpb.SendNotificationRequest
	(*SendNotificationResponse)(nil),     // 9: chatpb.SendNotificationResponse
	(*GetUserNotificationsRequest)(nil),  // 10: chatpb.GetUserNotificationsRequest
	(*GetUserNotificationsResponse)(nil), // 11: chatpb.GetUserNotificationsResponse
	(*MarkNotificationReadRequest)(nil),  // 12: chatpb.MarkNotificationReadRequest
	(*MarkNotificationReadResponse)(nil), // 13: chatpb.MarkNotificationReadResponse
}
var file_chat_notification_chat_proto_depIdxs = []int32{
	0,  // 0: chatpb.GetConversationResponse.messages:type_name -> chatpb.Message
	0,  // 1: chatpb.GetUserChatsResponse.recent_messages:type_name -> chatpb.Message
	1,  // 2: chatpb.GetUserNotificationsResponse.notifications:type_name -> chatpb.Notification
	2,  // 3: chatpb.ChatService.SendMessage:input_type -> chatpb.SendMessageRequest
	4,  // 4: chatpb.ChatService.GetConversation:input_type -> chatpb.GetConversationRequest
	6,  // 5: chatpb.ChatService.GetUserChats:input_type -> chatpb.GetUserChatsRequest
	8,  // 6: chatpb.ChatService.SendNotification:input_type -> chatpb.SendNotificationRequest
	10, // 7: chatpb.ChatService.GetUserNotifications:input_type -> chatpb.GetUserNotificationsRequest
	12, // 8: chatpb.ChatService.MarkNotificationRead:input_type -> chatpb.MarkNotificationReadRequest
	3,  // 9: chatpb.ChatService.SendMessage:output_type -> chatpb.SendMessageResponse
	5,  // 10: chatpb.ChatService.GetConversation:output_type -> chatpb.GetConversationResponse
	7,  // 11: chatpb.ChatService.GetUserChats:output_type -> chatpb.GetUserChatsResponse
	9,  // 12: chatpb.ChatService.SendNotification:output_type -> chatpb.SendNotificationResponse
	11, // 13: chatpb.ChatService.GetUserNotifications:output_type -> chatpb.GetUserNotificationsResponse
	13, // 14: chatpb.ChatService.MarkNotificationRead:output_type -> chatpb.MarkNotificationReadResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_chat_notification_chat_proto_init() }
func file_chat_notification_chat_proto_init() {
	if File_chat_notification_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_notification_chat_proto_rawDesc), len(file_chat_notification_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_notification_chat_proto_goTypes,
		DependencyIndexes: file_chat_notification_chat_proto_depIdxs,
		MessageInfos:      file_chat_notification_chat_proto_msgTypes,
	}.Build()
	File_chat_notification_chat_proto = out.File
	file_chat_notification_chat_proto_goTypes = nil
	file_chat_notification_chat_proto_depIdxs = nil
}
