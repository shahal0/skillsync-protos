// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: Chat/chat.proto

package chatpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message represents a single chat message
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // Unique message ID
	SenderId      string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`                                                           // ID of the user who sent the message
	RecipientId   string                 `protobuf:"bytes,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`                                                  // ID of the recipient (user or group)
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                                                             // Message content
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                                                               // Message status (sent, delivered, read)
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                        // Unix timestamp of when the message was sent
	MessageType   string                 `protobuf:"bytes,7,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`                                                  // Type of message (text, image, file, etc.)
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata (file URLs, etc.)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_Chat_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Message) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *Message) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Request to send a message
type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`                                                           // ID of the message sender
	RecipientId   string                 `protobuf:"bytes,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`                                                  // ID of the recipient (user or group)
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                                                                             // Message content
	MessageType   string                 `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`                                                  // Type of message (text, image, file, etc.)
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_Chat_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendMessageRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMessageRequest) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *SendMessageRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response after sending a message
type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // ID of the sent message
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                        // Status of the operation
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                 // Timestamp when the message was stored
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_Chat_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendMessageResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Request to get messages between users
type GetMessagesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                             // ID of the current user
	OtherUserId     string                 `protobuf:"bytes,2,opt,name=other_user_id,json=otherUserId,proto3" json:"other_user_id,omitempty"`            // ID of the other user in the conversation
	Page            int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                                              // Page number for pagination (1-based)
	Limit           int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                                            // Number of messages per page
	BeforeTimestamp int64                  `protobuf:"varint,5,opt,name=before_timestamp,json=beforeTimestamp,proto3" json:"before_timestamp,omitempty"` // Optional: get messages before this timestamp
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	mi := &file_Chat_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMessagesRequest) GetOtherUserId() string {
	if x != nil {
		return x.OtherUserId
	}
	return ""
}

func (x *GetMessagesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMessagesRequest) GetBeforeTimestamp() int64 {
	if x != nil {
		return x.BeforeTimestamp
	}
	return 0
}

// Response containing messages
type GetMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"` // List of messages
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // Total number of messages
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`        // Current page number
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`      // Number of messages per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	mi := &file_Chat_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetMessagesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetMessagesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMessagesResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Request to broadcast a message to multiple recipients
type BroadcastMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`                                                           // ID of the sender (usually an employer)
	RecipientIds  []string               `protobuf:"bytes,2,rep,name=recipient_ids,json=recipientIds,proto3" json:"recipient_ids,omitempty"`                                               // List of recipient IDs
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                                                                             // Message content
	MessageType   string                 `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`                                                  // Type of message
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastMessageRequest) Reset() {
	*x = BroadcastMessageRequest{}
	mi := &file_Chat_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastMessageRequest) ProtoMessage() {}

func (x *BroadcastMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastMessageRequest.ProtoReflect.Descriptor instead.
func (*BroadcastMessageRequest) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{5}
}

func (x *BroadcastMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *BroadcastMessageRequest) GetRecipientIds() []string {
	if x != nil {
		return x.RecipientIds
	}
	return nil
}

func (x *BroadcastMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BroadcastMessageRequest) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *BroadcastMessageRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response after broadcasting a message
type BroadcastMessageResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SuccessCount     int32                  `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`            // Number of successful deliveries
	FailureCount     int32                  `protobuf:"varint,2,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`            // Number of failed deliveries
	FailedRecipients []string               `protobuf:"bytes,3,rep,name=failed_recipients,json=failedRecipients,proto3" json:"failed_recipients,omitempty"` // List of recipient IDs that failed
	Status           string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                             // Overall status
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BroadcastMessageResponse) Reset() {
	*x = BroadcastMessageResponse{}
	mi := &file_Chat_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastMessageResponse) ProtoMessage() {}

func (x *BroadcastMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastMessageResponse.ProtoReflect.Descriptor instead.
func (*BroadcastMessageResponse) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{6}
}

func (x *BroadcastMessageResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BroadcastMessageResponse) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *BroadcastMessageResponse) GetFailedRecipients() []string {
	if x != nil {
		return x.FailedRecipients
	}
	return nil
}

func (x *BroadcastMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Request to update message status
type UpdateMessageStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // ID of the message to update
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                        // New status (e.g., "delivered", "read")
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // ID of the user updating the status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMessageStatusRequest) Reset() {
	*x = UpdateMessageStatusRequest{}
	mi := &file_Chat_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMessageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageStatusRequest) ProtoMessage() {}

func (x *UpdateMessageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateMessageStatusRequest) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMessageStatusRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *UpdateMessageStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateMessageStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response after updating message status
type UpdateMessageStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                     // Whether the update was successful
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                      // Status message
	MessageId     string                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // ID of the updated message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMessageStatusResponse) Reset() {
	*x = UpdateMessageStatusResponse{}
	mi := &file_Chat_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMessageStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMessageStatusResponse) ProtoMessage() {}

func (x *UpdateMessageStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMessageStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateMessageStatusResponse) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateMessageStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateMessageStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateMessageStatusResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// Conversation represents a chat conversation between users
type Conversation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // Unique conversation ID
	ParticipantIds []string               `protobuf:"bytes,2,rep,name=participant_ids,json=participantIds,proto3" json:"participant_ids,omitempty"`                                         // List of participant user IDs
	LastMessage    *Message               `protobuf:"bytes,3,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`                                                  // The most recent message in the conversation
	UnreadCount    int64                  `protobuf:"varint,4,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`                                                 // Number of unread messages
	UpdatedAt      int64                  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                                       // Timestamp of last update
	Metadata       map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional conversation metadata
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_Chat_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{9}
}

func (x *Conversation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conversation) GetParticipantIds() []string {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *Conversation) GetLastMessage() *Message {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

func (x *Conversation) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Conversation) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Conversation) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Request to get user's conversations
type GetConversationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID of the user
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                  // Page number for pagination
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                // Number of conversations per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsRequest) Reset() {
	*x = GetConversationsRequest{}
	mi := &file_Chat_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsRequest) ProtoMessage() {}

func (x *GetConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsRequest.ProtoReflect.Descriptor instead.
func (*GetConversationsRequest) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{10}
}

func (x *GetConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetConversationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response containing user's conversations
type GetConversationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"` // List of conversations
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                // Total number of conversations
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                  // Current page number
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                // Number of conversations per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsResponse) Reset() {
	*x = GetConversationsResponse{}
	mi := &file_Chat_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsResponse) ProtoMessage() {}

func (x *GetConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Chat_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsResponse.ProtoReflect.Descriptor instead.
func (*GetConversationsResponse) Descriptor() ([]byte, []int) {
	return file_Chat_chat_proto_rawDescGZIP(), []int{11}
}

func (x *GetConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *GetConversationsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetConversationsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_Chat_chat_proto protoreflect.FileDescriptor

const file_Chat_chat_proto_rawDesc = "" +
	"\n" +
	"\x0fChat/chat.proto\x12\x06chatpb\"\xc4\x02\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12!\n" +
	"\frecipient_id\x18\x03 \x01(\tR\vrecipientId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12!\n" +
	"\fmessage_type\x18\a \x01(\tR\vmessageType\x129\n" +
	"\bmetadata\x18\b \x03(\v2\x1d.chatpb.Message.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x02\n" +
	"\x12SendMessageRequest\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12!\n" +
	"\frecipient_id\x18\x02 \x01(\tR\vrecipientId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12!\n" +
	"\fmessage_type\x18\x04 \x01(\tR\vmessageType\x12D\n" +
	"\bmetadata\x18\x05 \x03(\v2(.chatpb.SendMessageRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\x13SendMessageResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"\xa6\x01\n" +
	"\x12GetMessagesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\"\n" +
	"\rother_user_id\x18\x02 \x01(\tR\votherUserId\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12)\n" +
	"\x10before_timestamp\x18\x05 \x01(\x03R\x0fbeforeTimestamp\"\x82\x01\n" +
	"\x13GetMessagesResponse\x12+\n" +
	"\bmessages\x18\x01 \x03(\v2\x0f.chatpb.MessageR\bmessages\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"\xa0\x02\n" +
	"\x17BroadcastMessageRequest\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12#\n" +
	"\rrecipient_ids\x18\x02 \x03(\tR\frecipientIds\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12!\n" +
	"\fmessage_type\x18\x04 \x01(\tR\vmessageType\x12I\n" +
	"\bmetadata\x18\x05 \x03(\v2-.chatpb.BroadcastMessageRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa9\x01\n" +
	"\x18BroadcastMessageResponse\x12#\n" +
	"\rsuccess_count\x18\x01 \x01(\x05R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x02 \x01(\x05R\ffailureCount\x12+\n" +
	"\x11failed_recipients\x18\x03 \x03(\tR\x10failedRecipients\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"l\n" +
	"\x1aUpdateMessageStatusRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"p\n" +
	"\x1bUpdateMessageStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\"\xba\x02\n" +
	"\fConversation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0fparticipant_ids\x18\x02 \x03(\tR\x0eparticipantIds\x122\n" +
	"\flast_message\x18\x03 \x01(\v2\x0f.chatpb.MessageR\vlastMessage\x12!\n" +
	"\funread_count\x18\x04 \x01(\x03R\vunreadCount\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\x03R\tupdatedAt\x12>\n" +
	"\bmetadata\x18\x06 \x03(\v2\".chatpb.Conversation.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x17GetConversationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\x96\x01\n" +
	"\x18GetConversationsResponse\x12:\n" +
	"\rconversations\x18\x01 \x03(\v2\x14.chatpb.ConversationR\rconversations\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit2\xab\x03\n" +
	"\vChatService\x12F\n" +
	"\vSendMessage\x12\x1a.chatpb.SendMessageRequest\x1a\x1b.chatpb.SendMessageResponse\x12F\n" +
	"\vGetMessages\x12\x1a.chatpb.GetMessagesRequest\x1a\x1b.chatpb.GetMessagesResponse\x12U\n" +
	"\x10BroadcastMessage\x12\x1f.chatpb.BroadcastMessageRequest\x1a .chatpb.BroadcastMessageResponse\x12^\n" +
	"\x13UpdateMessageStatus\x12\".chatpb.UpdateMessageStatusRequest\x1a#.chatpb.UpdateMessageStatusResponse\x12U\n" +
	"\x10GetConversations\x12\x1f.chatpb.GetConversationsRequest\x1a .chatpb.GetConversationsResponseB\x15Z\x13./gen/chatpb;chatpbb\x06proto3"

var (
	file_Chat_chat_proto_rawDescOnce sync.Once
	file_Chat_chat_proto_rawDescData []byte
)

func file_Chat_chat_proto_rawDescGZIP() []byte {
	file_Chat_chat_proto_rawDescOnce.Do(func() {
		file_Chat_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Chat_chat_proto_rawDesc), len(file_Chat_chat_proto_rawDesc)))
	})
	return file_Chat_chat_proto_rawDescData
}

var file_Chat_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_Chat_chat_proto_goTypes = []any{
	(*Message)(nil),                     // 0: chatpb.Message
	(*SendMessageRequest)(nil),          // 1: chatpb.SendMessageRequest
	(*SendMessageResponse)(nil),         // 2: chatpb.SendMessageResponse
	(*GetMessagesRequest)(nil),          // 3: chatpb.GetMessagesRequest
	(*GetMessagesResponse)(nil),         // 4: chatpb.GetMessagesResponse
	(*BroadcastMessageRequest)(nil),     // 5: chatpb.BroadcastMessageRequest
	(*BroadcastMessageResponse)(nil),    // 6: chatpb.BroadcastMessageResponse
	(*UpdateMessageStatusRequest)(nil),  // 7: chatpb.UpdateMessageStatusRequest
	(*UpdateMessageStatusResponse)(nil), // 8: chatpb.UpdateMessageStatusResponse
	(*Conversation)(nil),                // 9: chatpb.Conversation
	(*GetConversationsRequest)(nil),     // 10: chatpb.GetConversationsRequest
	(*GetConversationsResponse)(nil),    // 11: chatpb.GetConversationsResponse
	nil,                                 // 12: chatpb.Message.MetadataEntry
	nil,                                 // 13: chatpb.SendMessageRequest.MetadataEntry
	nil,                                 // 14: chatpb.BroadcastMessageRequest.MetadataEntry
	nil,                                 // 15: chatpb.Conversation.MetadataEntry
}
var file_Chat_chat_proto_depIdxs = []int32{
	12, // 0: chatpb.Message.metadata:type_name -> chatpb.Message.MetadataEntry
	13, // 1: chatpb.SendMessageRequest.metadata:type_name -> chatpb.SendMessageRequest.MetadataEntry
	0,  // 2: chatpb.GetMessagesResponse.messages:type_name -> chatpb.Message
	14, // 3: chatpb.BroadcastMessageRequest.metadata:type_name -> chatpb.BroadcastMessageRequest.MetadataEntry
	0,  // 4: chatpb.Conversation.last_message:type_name -> chatpb.Message
	15, // 5: chatpb.Conversation.metadata:type_name -> chatpb.Conversation.MetadataEntry
	9,  // 6: chatpb.GetConversationsResponse.conversations:type_name -> chatpb.Conversation
	1,  // 7: chatpb.ChatService.SendMessage:input_type -> chatpb.SendMessageRequest
	3,  // 8: chatpb.ChatService.GetMessages:input_type -> chatpb.GetMessagesRequest
	5,  // 9: chatpb.ChatService.BroadcastMessage:input_type -> chatpb.BroadcastMessageRequest
	7,  // 10: chatpb.ChatService.UpdateMessageStatus:input_type -> chatpb.UpdateMessageStatusRequest
	10, // 11: chatpb.ChatService.GetConversations:input_type -> chatpb.GetConversationsRequest
	2,  // 12: chatpb.ChatService.SendMessage:output_type -> chatpb.SendMessageResponse
	4,  // 13: chatpb.ChatService.GetMessages:output_type -> chatpb.GetMessagesResponse
	6,  // 14: chatpb.ChatService.BroadcastMessage:output_type -> chatpb.BroadcastMessageResponse
	8,  // 15: chatpb.ChatService.UpdateMessageStatus:output_type -> chatpb.UpdateMessageStatusResponse
	11, // 16: chatpb.ChatService.GetConversations:output_type -> chatpb.GetConversationsResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_Chat_chat_proto_init() }
func file_Chat_chat_proto_init() {
	if File_Chat_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Chat_chat_proto_rawDesc), len(file_Chat_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Chat_chat_proto_goTypes,
		DependencyIndexes: file_Chat_chat_proto_depIdxs,
		MessageInfos:      file_Chat_chat_proto_msgTypes,
	}.Build()
	File_Chat_chat_proto = out.File
	file_Chat_chat_proto_goTypes = nil
	file_Chat_chat_proto_depIdxs = nil
}
